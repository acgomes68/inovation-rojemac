version: "3"

services:
  node:
    build:
      context: ./backend
      dockerfile: ./backend/Dockerfile
    depends_on:
      - postgres
    image: acgomes68/alpine-node:latest
    container_name: node-${APP_NAME}
    environment:
        - CHOKIDAR_USEPOLLING=true
        - API_HOST=${API_HOST}
        - API_PORT=${API_PORT}
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWD=${POSTGRES_PASSWD}
        - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    command: npm start
    ports:
    - ${API_PORT}:3000
    volumes:
    - ./backend:/home/node/app
      
  react:
    build:
      context: ./frontend
      dockerfile: ./frontend/Dockerfile
    depends_on:
      - node
    image: acgomes68/alpine-node-react:latest
    container_name: react-${APP_NAME}
    environment:
      - CHOKIDAR_USEPOLLING=true
      - API_URL=${API_URL}
      - API_PORT=${API_PORT}
      - API_CNPJ=${API_CNPJ}
    command: npm start
    stdin_open: true
    ports:
    - ${APP_PORT}:3000
    volumes:
    - ./frontend:/home/node/app
    
  postgres:
    image: postgres:11-alpine
    container_name: postgres-${APP_NAME}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWD}
    ports:
    - ${POSTGRES_PORT}:5432
    volumes:
    - cliente-pj-data:/var/lib/postgresql/data

volumes:
    cliente-pj-data:
